/* L = left distance sensor;
 * R = right distance sensor;
 * U = up distance sensor
 * D = down distance sensor
 */
 
// Finding Current (x, y) Location (origin at up left corner)
final double TOTAL = ;
double x;
if (L <= R) x = L;
else x = TOTAL - R;
double y;
if (U <= D) y = U;
else y = TOTAL - D;
telemetry.addData("Position", "(" + x + ", " + y + ")");

// Storing Target Location
final double TARGETx;
final double TARGETy;
final double TARGETz;
/* high goal */ 
if (y1) {
  TARGETx = ;
  TARGETy = 0;
  TARGETz = ;
/* far right power shot */
} else if (x1) {
  TARGETx = ;
  TARGETy = 0;
  TARGETz = ;
} 
telemetry.addData("Target", "(" + TARGETx + ", " + TARGETy + ", " + TARGETz + ")");

// Find Angle & Shift Robot Accordingly
double relativex = TARGETx - x;
double theta;
if (leftx1 <=0 && lefty1 >= 0 )  {
  theta = Math.atan(Math.abs(leftx1)/Math.abs(lefty1));
  theta += (Math.PI/2);
} else {
  theta = Math.atan(Math.abs(lefty1)/Math.abs(leftx1));
}
// AM rotate theta degrees

// Align to Target Height (TARGETz)
double hyp = Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2);
final double optimalDistance = ; // for .8 speed
/* option one: flywheel speed adjustment */
flywheel.setPower(hyp/optimalDistance * .8)
/* option two: distance adjustment */
// AM drive hyp - optimal distance meters
